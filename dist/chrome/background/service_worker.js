(()=>{"use strict";var t={487:(t,e,n)=>{n.d(e,{A:()=>p});var o='Could not resolve file path. Ensure the file exists in the "public" or "pages" directory.',r=function(t){return console.error(`Could not resolve path ${t}. Either add it to the "public" directory or create a page in the "pages" directory.`),t},i=function(t){return`Could not resolve path ${t}. Either add it to the "public" directory or create a script in the "scripts" directory.`},s=function(t){return`Could not resolve path ${t}. If you want to preserve this file path, add the file to the "public" directory.`};function c(t){let e=t.split("/"),n=[];for(let t of e)".."===t||"."===t||""!==t&&n.push(t);return n.join("/")}var a={"public/chromeWindow.png":"public/chromeWindow.png","public/icon/icon_16.png":"public/icon/icon_16.png","public/icon/icon_48.png":"public/icon/icon_48.png","public/react.png":"public/react.png","public/tailwind.png":"public/tailwind.png","public/tailwind_bg.png":"public/tailwind_bg.png","public/typescript.png":"public/typescript.png","background/service_worker.js":"./background.ts","content_scripts/content-0":["./content/content.tsx"]};function l(t){if(!t)return console.error(o),"";if(t?.startsWith("http")||t?.startsWith("chrome://")||t?.startsWith("about:"))return t;if(t?.startsWith("chrome-extension://")){let e=chrome.runtime.getURL("");if(t.startsWith(e)){let n=t.replace(e,"");return chrome.runtime.getURL(l(n))}return t}if(t?.startsWith("/_favicon"))return t;let e=Object.entries(a).find((([e,n])=>{let o=c(t);return(n===o||n===`pages/${o}`||n===`scripts/${o}`)&&e})),n=c(t);return n.includes("public/")?"/"+n:e&&e.length?e[0]:("/"!==t&&function(t){t?.endsWith(".html")?console.error(r(t)):t?.endsWith(".js")?console.error(i(t)):console.error(s(t))}(t),t)}var p={solve:function(t){if("string"==typeof t)return l(t);let e=t=>({...t,...t?.path&&{path:"string"==typeof t.path?l(t.path):Object.entries(t.path).reduce(((t,[e,n])=>(t[e]=l(n),t)),{})},...t?.popup&&{popup:l(t.popup)},...t?.url&&{url:l(t.url)},...t?.iconUrl&&{iconUrl:l(t.iconUrl)},...t?.files&&{files:t.files.map((t=>l(t)))},...t?.js&&{js:Array.isArray(t.js)?t.js.map((t=>l(t))):t.js},...t?.css&&{css:Array.isArray(t.css)?t.css.map((t=>l(t))):t.css}});return Array.isArray(t)?t.map((t=>e(t))):{...e(t||{})}}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var o=n(487).A;console.log("Hello from the background script!");const r=[{id:"uppercase",title:"Uppercase",function:async function(){const t=window.getSelection()?.toString();document.execCommand("insertText",!1,t?.toUpperCase())}},{id:"lowercase",title:"Lowercase",function:async function(){const t=window.getSelection()?.toString();document.execCommand("insertText",!1,t?.toLowerCase())}},{id:"capitalize",title:"Capitalize",function:async function(){const t=window.getSelection()?.toString(),e=(t?.charAt(0).toUpperCase()??"")+(t?.slice(1).toLowerCase()??"");document.execCommand("insertText",!1,e)}},{id:"fixTypos",title:"Fix Typos",function:async function(){const t=window.getSelection()?.toString();chrome.storage.sync.get("apiKey",(async e=>{const n=e.apiKey;if(!n)return void console.error("API key is not set");const o=`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${n}`,r={system_instruction:{parts:{text:"You are a writing assistant, you are given a text and you have to fix grammar and typos in that text IN THE SAME LANGUAGE AS THE INPUT and reply with ONLY THE FIXED TEXT"}},safetySettings:[{category:7,threshold:4}],contents:[{parts:[{text:`${t}`}]}]};let i=t;try{const t=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),e=await t.json();console.log(e),i=e.candidates[0].content.parts[0].text.trim()}catch(t){console.error("Error prompting Gemini:",t)}try{document.execCommand("insertText",!1,i)}catch(t){console.error("Error modifying text:",t)}}))}},{id:"fixGrammar",title:"Fix Grammar",function:async function(){const t=window.getSelection()?.toString();console.log("calling prompt gemini");const e=await(async(t,e)=>{console.log("prompting gemini");const n=await chrome.storage.local.get("apiKey");if(!n)return void console.error("API key is not set");const o=`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${n}`,r={system_instruction:{parts:{text:"You are a writing assistant, you are given a text and you have to fix grammar in that text in the same language as the input and reply with ONLY the fixed text and NO ADDITIONAL WHITESPACE"}},contents:[{parts:[{text:`${e}`}]}]};let i;try{const t=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});return i=(await t.json()).candidates[0].content.parts[0].text.trim(),i}catch(t){console.error("Error prompting Gemini:",t)}})(0,t||"")||"";document.execCommand("insertText",!1,e)}}];let i=[];chrome.runtime.onInstalled.addListener((t=>{"install"!==t.reason&&"update"!==t.reason||(chrome.contextMenus.create({id:"sideKlickParent",title:"SideKlickCrxjs",contexts:["selection"]}),r.forEach((t=>{chrome.contextMenus.create({id:t.id,parentId:"sideKlickParent",title:t.title,contexts:["selection"]})})))})),chrome.contextMenus.onClicked.addListener(((t,e)=>{const n=r.find((e=>e.id===t.menuItemId))||i.find((e=>e.id===t.menuItemId));if(n&&n.function)try{e&&void 0!==e.id?chrome.scripting.executeScript(o.solve({target:{tabId:e.id},func:n.function})):console.error("Tab ID is undefined")}catch(t){console.error("Error executing function:",t)}}));const s=new class{constructor(t,e,n){this.id=t,this.title=e,this.systemPrompt=`You are a writing assistant, you are given a text and you have to ${n} in the same language as the input and reply with ONLY the fixed text`}async function(){const t=window.getSelection()?.toString()||"";console.log(`system prompt: ${this.systemPrompt}`),chrome.storage.sync.get("apiKey",(async e=>{const n=e.apiKey;if(!n)return void console.error("API key is not set");const o=`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${n}`,r={system_instruction:{parts:{text:this.systemPrompt}},safetySettings:[{category:7,threshold:4}],contents:[{parts:[{text:`${t}`}]}]};let i=t;try{const t=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),e=await t.json();console.log(e),i=e.candidates[0].content.parts[0].text.trim()}catch(t){console.error("Error prompting Gemini:",t)}try{document.execCommand("insertText",!1,i)}catch(t){console.error("Error modifying text:",t)}}))}}("morePro","more professional","make it more professional");i.push(s),i.forEach((t=>{chrome.contextMenus.create({id:t.id,title:t.title,contexts:["selection"]})}))})();